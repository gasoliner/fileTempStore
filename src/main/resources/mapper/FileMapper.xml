<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.fts.mapper.FileMapper">
  <resultMap id="BaseResultMap" type="cn.fts.po.File">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start" jdbcType="TIMESTAMP" property="start" />
    <result column="keep" jdbcType="INTEGER" property="keep" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="access" jdbcType="INTEGER" property="access" />
    <result column="authoricode" jdbcType="VARCHAR" property="authoricode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, start, keep, url, access, authoricode
  </sql>
  <select id="selectByExample" parameterType="cn.fts.po.FileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.fts.po.FileExample">
    delete from file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.fts.po.File">
    insert into file (id, name, start, 
      keep, url, access, 
      authoricode)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{start,jdbcType=TIMESTAMP}, 
      #{keep,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{access,jdbcType=INTEGER}, 
      #{authoricode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.fts.po.File">
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="keep != null">
        keep,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="access != null">
        access,
      </if>
      <if test="authoricode != null">
        authoricode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="keep != null">
        #{keep,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="access != null">
        #{access,jdbcType=INTEGER},
      </if>
      <if test="authoricode != null">
        #{authoricode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.fts.po.FileExample" resultType="java.lang.Long">
    select count(*) from file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update file
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.start != null">
        start = #{record.start,jdbcType=TIMESTAMP},
      </if>
      <if test="record.keep != null">
        keep = #{record.keep,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.access != null">
        access = #{record.access,jdbcType=INTEGER},
      </if>
      <if test="record.authoricode != null">
        authoricode = #{record.authoricode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update file
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      start = #{record.start,jdbcType=TIMESTAMP},
      keep = #{record.keep,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      access = #{record.access,jdbcType=INTEGER},
      authoricode = #{record.authoricode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.fts.po.File">
    update file
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="keep != null">
        keep = #{keep,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="access != null">
        access = #{access,jdbcType=INTEGER},
      </if>
      <if test="authoricode != null">
        authoricode = #{authoricode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.fts.po.File">
    update file
    set name = #{name,jdbcType=VARCHAR},
      start = #{start,jdbcType=TIMESTAMP},
      keep = #{keep,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      access = #{access,jdbcType=INTEGER},
      authoricode = #{authoricode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>